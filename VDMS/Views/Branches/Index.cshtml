@model IEnumerable<VDMS.Models.Branch>

@{
    ViewBag.Title = "Branches";
}

<h2>Branches</h2>

<p>
    @Html.ActionLink("Add new branch", "Create", null, new { @class="btn btn-default" })
</p>

<body>

    @{
        var grid = new WebGrid(Model, canPage: true, rowsPerPage: 20, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent", defaultSort: "Name");
        grid.Pager(WebGridPagerModes.NextPrevious);
        var gridColumns = new List<WebGridColumn>();
        gridColumns.Add(grid.Column("Name", @Functions.Sorter("Name", "Name", grid)));
        gridColumns.Add(grid.Column("Address", @Functions.Sorter("Address", "Address", grid)));
        gridColumns.Add(grid.Column("Disabled", "Disabled",
    format:@<text><input class="check-box" id="disabledChkBx" name="disabledChkBx" type="checkbox" value="@item.Disabled" disabled
                         @(item.Disabled == false ? null : "checked") /></text>
        ));
        gridColumns.Add(grid.Column(format: (item) => Html.ActionLink("Details", "Details", new
        {
            id = item.BranchID
        })));
        if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || (User.IsInRole("MBB Developer"))))
        {
            gridColumns.Add(grid.Column(format: (item) => Html.ActionLink("Edit", "Edit", new { id = item.BranchID })));
            gridColumns.Add(grid.Column(format: (item) => Html.ActionLink((@item.Disabled ? "Enable" : "Disable"), "Delete", new { id = item.BranchID })));
        }
    }

    <div id="gridContent">
        @grid.GetHtml(tableStyle: "vdf-doc table-responsive",
                headerStyle: "header",
                //alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                columns: grid.Columns(gridColumns.ToArray()))
    </div>
</body>

