@model IEnumerable<VDMS.Models.Document>
@{
    ViewBag.Title = "Reports";

    VDMS.Models.Document document = new VDMS.Models.Document();
    var grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 20, canSort: false);
}

<h2>Reports</h2>

<head>
    <!-- Code to wire up the DatePicker -->
    <script type="text/javascript">
        $(function () {
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.date-picker').datepicker();
        })
    </script>
</head>

<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken();

        <div class="form-horizontal">
            <hr />

            <div class="form-group">
                <div class="form-group col-md-5">
                    @Html.Label("From", labelText: "From", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("StartDate", "", new { @class = "form-control date-picker", @autocomplete = "off" })
                    </div>
                </div>

                <div class="form-group col-md-5">
                    @Html.Label("To", labelText: "To", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("EndDate", "", new { @class = "form-control date-picker", @autocomplete = "off" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="form-group col-md-5">
                    @Html.LabelFor(model => document.DocTypeID, "Doc Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DocTypeID", null, "Select Document", htmlAttributes: new { @class = "form-control" })
                        @Html.HiddenFor(model => document.DocTypeID)
                    </div>
                </div>
                <div class="form-group col-md-5">
                    @Html.LabelFor(model => document.BranchID, "BranchID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BranchID", null, "Select Branch", htmlAttributes: new { @class = "form-control" })
                        @Html.HiddenFor(model => document.BranchID)
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="form-group col-md-5">
                    @Html.Label("Created by", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserID", null, "Select Creator", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-md-5">
                    @Html.LabelFor(model => document.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => document.Recipient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => document.Recipient, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="form-group col-md-5">
                    @Html.Label("Origin", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.RadioButton("Inbound", "Inbound") Inbound
                        @Html.RadioButton("Inbound", "Outbound") Outbound
                        @Html.RadioButton("Inbound", "All") All

                        @Html.HiddenFor(model => document.Inbound)
                    </div>
                </div>

                <div class="form-group col-md-5">
                    <input type="submit" name="submit" value="Preview" class="btn btn-default" />
                    &nbsp;  &nbsp;
                    <input type="submit" name="submit" value="Export" class="btn btn-default" />
                </div>
            </div>

            <br /><br />
            <div id="gridContent">
                @grid.GetHtml(tableStyle: "vdf-doc table-responsive",
                 headerStyle: "header",
                 selectedRowStyle: "select",
                 columns: grid.Columns(
                         grid.Column("DocSerial", "DocSerial"),
                         grid.Column("Branch.Name", "Branch Name"),
                         grid.Column("DocumentType.Name", "Type"),
                         grid.Column("UserName", "Created by"),
                         grid.Column("Inbound", "Inbound"),
                         grid.Column("Recipient", "Recipient"),
                         grid.Column("Description", "Description"),
                         grid.Column("CreationDate", "Creation Date")))
            </div>

        </div>
    }
</body>
