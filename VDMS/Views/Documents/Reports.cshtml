@model IEnumerable<VDMS.Models.Document>
@{
    ViewBag.Title = "Reports";
}

<h2>Reports</h2>

<head>
    <!-- Code to wire up the DatePicker -->
    <script type="text/javascript">
        $(function () {
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.date-picker').datepicker();
        })
    </script>
</head>

<body>

    @{
        VDMS.Models.Document document = new VDMS.Models.Document();
    }
    @{
        var grid = new WebGrid(Model, canPage: true, rowsPerPage: 20, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
        grid.Pager(WebGridPagerModes.NextPrevious);

        var gridColumns = new List<WebGridColumn>();
        gridColumns.Add(grid.Column("DocSerial", "DocSerial"));
        gridColumns.Add(grid.Column("Branch.Name", "Branch Name"));
        gridColumns.Add(grid.Column("DocumentType.Name", "Type"));
        gridColumns.Add(grid.Column("UserID", "Created by"));
        gridColumns.Add(grid.Column("Inbound", "Inbound"));
        gridColumns.Add(grid.Column("Recipient", "Recipient"));
        gridColumns.Add(grid.Column("Description", "Description", style: "description"));
        gridColumns.Add(grid.Column("CreationDate", "Creation Date"));
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken();

        <div class="form-horizontal">
            <hr />

            <div class="form-group">
                @Html.Label("From", labelText: "From", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("StartDate", "", new { @class = "form-control date-picker", @autocomplete = "off" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("To", labelText: "To", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("EndDate", "", new { @class = "form-control date-picker", @autocomplete = "off" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => document.DocTypeID, "DocTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DocTypeID", null, "Select Document", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => document.DocTypeID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => document.DocTypeID)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => document.BranchID, "BranchID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BranchID", null, "Select Branch", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => document.BranchID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => document.BranchID)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Created by", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("UserID", "", new { @class = "form-control", @Value = User.Identity.Name })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="checkbox">
                    @Html.LabelFor(model => document.Inbound, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.CheckBox("Inbound", new { @checked = "checked" })
                        @Html.HiddenFor(model => document.Inbound)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => document.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => document.Recipient, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => document.Recipient, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Generate" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div id="gridContent">
            @grid.GetHtml(tableStyle: "vdf-doc table-responsive",
                headerStyle: "header",
                selectedRowStyle: "select",
                columns: grid.Columns(gridColumns.ToArray()))
        </div>

    }
</body>
